# This file contains common configurations and pin mappings
# for the Flsun Q5 using the MKS Robin Nano board.

# To use this config, the firmware should be compiled for the
# STM32F103. When running "make menuconfig", enable "extra low-level
# configuration setup", select the 28KiB bootloader, and serial (on
# USART3 PB11/PB10) communication.

# Note that the "make flash" command does not work with MKS Robin
# boards. After running "make", run the following command:
# ./scripts/update_mks_robin.py out/klipper.bin out/Robin_nano.bin
# Copy the file out/Robin_nano.bin to an SD card and then restart the
# printer with that SD card.

# See docs/Config_Reference.md for a description of parameters.

#[mcu]
#serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command
baud: 115200 

[printer]
kinematics: delta
max_velocity: 350
max_accel: 3000
max_accel_to_decel: 3000
max_z_velocity: 100
#delta_radius: 107.5
print_radius: 100
#minimum_z_position=-5

[bed_mesh]
mesh_radius: 90
mesh_origin: 0,0
round_probe_count: 5
horizontal_move_z: 25

[stepper_a]
step_pin: PE3
dir_pin: PE2
enable_pin: !PE4
microsteps: 16
rotation_distance: 40
endstop_pin: PA15
homing_speed: 20
homing_retract_dist: 5
homing_retract_speed: 10
second_homing_speed: 2
#position_endstop: 220
#arm_length: 215
#angle: 210

[stepper_b]
step_pin: PE0
dir_pin: PB9
enable_pin: !PE1
microsteps: 16
rotation_distance: 40
endstop_pin: PA12
#angle: 330

[stepper_c]
step_pin: PB5
dir_pin: PB4
enable_pin: !PB8
microsteps: 16
rotation_distance: 40
endstop_pin: PC4
#angle: 90

[static_digital_output display_reset]
pins: !PC6, !PD13

[probe]
pin: !PA11
x_offset: 0
y_offset: 0
#z_offset: 20.26
speed: 5.0
samples: 5
samples_result: average
sample_retract_dist: 3
samples_tolerance: 0.02
samples_tolerance_retries: 5

[delta_calibrate]
radius: 95
horizontal_move_z: 25
Speed: 10

#[tmc2209 extruder]
#uart_pin: PC13
#run_current: 1.0
#hold_current: 0.5
#interpolate: True
#stealthchop_threshold: 0

[extruder]
step_pin: PD6
dir_pin: PD3
enable_pin: !PB3
microsteps: 16
#rotation_distance: 22.17
rotation_distance:24.06
gear_ratio: 66:22
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC3
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC1
#control: pid
#pid_kp: 14.529
#pid_ki: 0.557
#pid_kd: 94.802
min_temp: 0
max_temp: 275
#max_extrude_only_distance: 110.0
pressure_advance: 0.35
#for PLA at 210
#max_extrude_only_accel: 300
#max_extrude_only_velocity

[heater_bed]
heater_pin: PA0
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC0
control: pid
pid_Kp: 325.10
pid_Ki: 63.35
pid_Kd: 417.10
min_temp: 0
max_temp: 130

[fan]
pin: PB1

[firmware_retraction]
retract_length: 6.5
retract_speed: 25
unretract_extra_length: 0
unretract_speed: 25

#[input_shaper]
#shaper_freq_x: 25
#shaper_freq_y: 25
#shaper_type: ei

[pause_resume]

[display_status]

[virtual_sdcard]
path: /sdcard

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[respond]

[filament_switch_sensor my_sensor]
#pause_on_runout: True
#   When set to True, a PAUSE will execute immediately after a runout
#   is detected. Note that if pause_on_runout is False and the
#   runout_gcode is omitted then runout detection is disabled. Default
#   is True.
#runout_gcode:
#   A list of G-Code commands to execute after a filament runout is
#   detected. See docs/Command_Templates.md for G-Code format. If
#   pause_on_runout is set to True this G-Code will run after the
#   PAUSE is complete. The default is not to run any G-Code commands.
#insert_gcode:
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
#event_delay: 3.0
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
#pause_delay: 0.5
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if OctoPrint exhibits strange pause behavior.
#   Default is 0.5 seconds.
switch_pin: PA2

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [printer]
#*# delta_radius = 105.884292
#*#
#*# [stepper_a]
#*# angle = 210.681359
#*# arm_length = 215.000000
#*# position_endstop = 221.034688
#*#
#*# [stepper_b]
#*# angle = 330.814068
#*# arm_length = 215.000000
#*# position_endstop = 221.313846
#*#
#*# [stepper_c]
#*# angle = 90.000000
#*# arm_length = 215.000000
#*# position_endstop = 221.034753
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.065134, -0.065134, -0.065134, -0.065134, -0.065134
#*# 	0.026155, 0.026155, 0.051351, 0.061820, 0.061820
#*# 	0.114642, 0.067715, 0.059985, 0.057496, 0.036438
#*# 	0.011566, 0.011566, 0.001759, 0.035615, 0.035615
#*# 	0.060401, 0.060401, 0.060401, 0.060401, 0.060401
#*# tension = 0.2
#*# min_x = -90.0
#*# algo = lagrange
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = -90.0
#*# x_count = 5
#*# max_y = 90.0
#*# mesh_x_pps = 2
#*# max_x = 90.0
#*#
#*# [probe]
#*# z_offset = 22.630
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 18.624
#*# pid_ki = 0.920
#*# pid_kd = 94.285
#*#
#*# [delta_calibrate]
#*# height0 = 22.63
#*# height0_pos = 15889.800,15874.400,15877.200
#*# height1 = 22.63
#*# height1_pos = 20404.000,20307.800,13687.000
#*# height2 = 22.63
#*# height2_pos = 15545.200,23044.200,15502.200
#*# height3 = 22.63
#*# height3_pos = 13763.800,19586.600,19560.600
#*# height4 = 22.63
#*# height4_pos = 15323.400,15348.200,20600.200
#*# height5 = 22.63
#*# height5_pos = 18891.400,13882.400,18910.400
#*# height6 = 22.63
#*# height6_pos = 21720.000,15375.400,15398.000
